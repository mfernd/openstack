---
- name: Install and start rke2
  hosts: localhost
  become: true
  tasks:
    - name: Download rke2 installation script
      ansible.builtin.get_url:
        url: https://get.rke2.io
        dest: /tmp/install_rke2.sh
        mode: '0700'

    - name: Install rke2 as server
      ansible.builtin.shell:
        cmd: |
          INSTALL_RKE2_CHANNEL="latest" /tmp/install_rke2.sh
      changed_when: true

    - name: Start the rke2-server service
      ansible.builtin.service:
        name: rke2-server
        enabled: true
        state: started

    - name: Create symlink for kubectl
      ansible.builtin.file:
        src: /var/lib/rancher/rke2/bin/kubectl
        dest: /usr/local/bin/kubectl
        state: link
        force: true

    - name: Create .kube/ folder
      ansible.builtin.file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0700'
        owner: ubuntu
        group: ubuntu

    # because ansible.builtin.copy was not working, I don't know why...
    - name: Copy kubeconfig to ~/.kube/
      ansible.builtin.shell:
        cmd: |
          sudo cp /etc/rancher/rke2/rke2.yaml /home/ubuntu/.kube/config
          sudo chmod 0600 /home/ubuntu/.kube/config
          sudo chown ubuntu:ubuntu /home/ubuntu/.kube/config
      changed_when: true

- name: Install k8s tools
  hosts: localhost
  become: true
  tasks:
    - name: Download Helm installation script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0700'

    - name: Install Helm
      ansible.builtin.shell:
        cmd: |
          /tmp/get_helm.sh
      changed_when: true

    - name: Download helmfile binary
      ansible.builtin.unarchive:
        src: https://github.com/helmfile/helmfile/releases/download/v0.170.1/helmfile_0.170.1_linux_amd64.tar.gz
        dest: /usr/local/bin/
        mode: '0755'
        remote_src: true
        include:
          - helmfile

    - name: Download k9s binary
      ansible.builtin.unarchive:
        src: https://github.com/derailed/k9s/releases/download/v0.32.7/k9s_Linux_amd64.tar.gz
        dest: /usr/local/bin/
        mode: '0755'
        remote_src: true
        include:
          - k9s

- name: Install ArgoCD
  hosts: localhost
  tasks:
    - name: Apply ArgoCD manifests
      ansible.builtin.shell:
        cmd: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      changed_when: true

    - name: Download ArgoCD CLI
      ansible.builtin.get_url:
        url: https://github.com/argoproj/argo-cd/releases/download/v2.13.3/argocd-linux-amd64
        dest: /usr/local/bin/argocd
        mode: '0755'
      become: true

    - name: Login to ArgoCD
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          argocd --port-forward \
                 --port-forward-namespace argocd \
                 login \
                 --username admin \
                 --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d) \
                 --insecure
      changed_when: true

    - name: Change the ArgoCD password
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          argocd --port-forward \
                 --port-forward-namespace argocd \
                 account update-password \
                 --new-password "{{ argocd_password }}" \
                 --current-password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          kubectl -n argocd delete secrets argocd-initial-admin-secret
      changed_when: true
